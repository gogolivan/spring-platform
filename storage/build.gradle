plugins {
    id 'java'
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.dependency.management)
    alias(libs.plugins.graalvm.native) apply false
}

if (project.hasProperty('native') && project.native.toString() == 'true') {
    apply plugin: 'org.graalvm.buildtools.native'
}

group = 'com.github.gogolivan.springplatform'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform(project(":spring-platform-dependencies"))
    implementation(project(':spring-platform-spring-boot-starter'))
    implementation(project(':proto'))

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter')
    implementation('io.micrometer:micrometer-tracing-bridge-otel')
    implementation('io.opentelemetry:opentelemetry-exporter-otlp')
    implementation 'io.grpc:grpc-services'
    implementation 'org.springframework.grpc:spring-grpc-server-web-spring-boot-starter'
    implementation libs.mapstruct
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor libs.mapstruct.processor
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.grpc:spring-grpc-test'
    testImplementation 'com.tngtech.archunit:archunit-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
